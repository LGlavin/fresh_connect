
<div id="market-front">
  <!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />

  
  <meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no' />
  <script src='//api.tiles.mapbox.com/mapbox.js/v1.4.2/mapbox.js'></script>
  <link href='//api.tiles.mapbox.com/mapbox.js/v1.4.2/mapbox.css' rel='stylesheet' />
  
  <style>
    body { margin:0; padding:0; }
    #map { position:absolute; top:0; bottom:0; width:100%; }
  </style>
</head>
<body>
<style>
#search {
    position:absolute;
    top:75px;
    right:10px;
    font-size:100%;
}
</style>

  <script src="https://code.jquery.com/jquery-1.10.1.min.js"></script>
  <script src="https://code.jquery.com/jquery-migrate-1.2.1.min.js"></script>

<script src='/mapbox.js/assets/csv2geojson.js'></script>
<div id='map'></div>
<input placeholder='address' id='search' />
<script>
var map = L.mapbox.map('map', 'examples.map-9ijuk24y')
    .setView([38, -100.0], 4),
    markerLayer = L.mapbox.markerLayer().addTo(map);


// This example requires jQuery or you can modify it to work with a different
// AJAX library. See the Markers from CSV example for full details of the
// restrictions of loading CSV files and the requirement of the csv2geojson
// library.
 var markerLayer = mapbox.markers.layer();
  var interaction = mapbox.markers.interaction(markerLayer);
  interaction.formatter(function(feature) {
    console.log(feature);
      var o = '<strong>' + feature.properties.name + '</strong>';
      return o;
  });
  $.get("/db/markets.csv", function(data) { 
    var markets = $.csv.toObjects(data); 
    $.each(markets, function(i, market) {
      var newfeature = {
          geometry: { coordinates: [market.longitude,market.latitude] },
          properties:  {
            name: market.name
          }
      };
      markerLayer.add_feature(newfeature);
      map.addLayer(markerLayer);
    });
  });
// Though these functions are below the places where they're used in this
// script, they'll still work due to JavaScript's function hoisting feature.
function csvLoaded(csv) {
    markerLayer.setGeoJSON(csv2geojson.csv2geojson(csv));
}


</script>
</body>
</html>


<h2> Locations </h2>

<%= form_tag locations_path, :method => :get do %>
  <p>
    <%= text_field_tag :search, params[:search] %>
    <%= submit_tag "Search Near", :name => nil %>
  </p>
<% end %>

<table>
  <tr>
    <th>Address</th>
    <th>Latitude</th>
    <th>Longitude</th>
  </tr>
  <% for location in @locations %>
    <tr>
      <td><%= location.address %></td>
      <td><%= location.latitude %></td>
      <td><%= location.longitude %></td>
      <td><%= link_to "Show", location %></td>
      <td><%= link_to "Edit", edit_location_path(location) %></td>
      <td><%= link_to "Destroy", location, :confirm => 'Are you sure?', :method => :delete %></td>
    </tr>
  <% end %>
</table>

<p><%= link_to "New Location", new_location_path %></p>

